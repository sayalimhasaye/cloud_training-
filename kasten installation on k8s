https://docs.kasten.io/latest/install/other/other.html
-----------------------------------------------------------

PRE_REQUISITES: Create Storage Class, Secrets, PVC & PV, 

Install helm 
===============
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh
helm version
================================
Do a pre-check to see if any installation is pending (https://docs.kasten.io/latest/install/requirements.html#install-prereqs)

curl https://docs.kasten.io/tools/k10_primer.sh | bash 
                OR
curl https://docs.kasten.io/tools/k10_primer.sh  | bash /dev/stdin - s <STORAGE_CLASS_NAME>
========================================================
In case jq & epel-release is not installed then run
yum install jq -y
yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
-------------------------------------------------------
 Repeat the Second step to do a pre-check.
-------------------------------------------------------
 Add helm repo
helm repo add kasten https://charts.kasten.io/
-------------------------------------------------------

Create a separate namespace for Kasten-io  
kubectl create ns kasten-io
-------------------------------------------------------
Create Annotation for VolumeSnapShotclass & StorageClass

kubectl annotate volumesnapshotclass <VOLUME_SNAPSHOTCLASS_NAME>  k10.kasten.io/is-snapshot-class=true
kubectl annotate storageclass <STORAGECLASS_NAME>  k10.kasten.io/volume-snapshot-class=<VOLUME_SNAPSHOTCLASS_NAME>
-------------------------------------------------------
Repeat the Second step to do a pre-check.
-------------------------------------------------------
Install Kasten using helm command
 helm install k10 kasten/k10 --namespace=kasten-io --set global.persistence.storageClass=<STORAGECLASS_NAME>
-------------------------------------------------------
Expose the gateway pod
kubectl edit pod <gatway-pod> -n kasten-io
edit the service type from ClusterIP to NodePort
              OR
kubectl expose pod/gateway --name=svc --type=NodePort --port=80 --target-port=80 -n kasten-io
-------------------------------------------------------
Note down the ip of the node where gateway pod is running also the port of the gateway service which we created just now using: kubectl get svc -n kasten-io
Go to chrome and search <node-ip>:<port>/k10/#/
-------------------------------------------------------
If login button is not highlighted in the front page uninstall kasten using:
helm uninstall k10 -n kasten-io
and then install kasten using below command:
helm install k10 kasten/k10 --namespace=kasten-io --version=5.5.6 --set global.persistence.storageClass=<storage-class-name> --set eula.accept=true  --set eula.company="COMPANY NAME" --set eula.email="COMPANY EMAIL"
-------------------------------------------------------
Check if PVC is in Bound Status
kubectl get pvc -n kasten-io
-------------------------------------------------------
Set kube-context
 kubectl config set-context --current --namespace kasten-io
